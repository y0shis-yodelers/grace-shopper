/* SEED OBJECT GENERATOR
WRITES TO FILE */

const fs = require('fs')

const writeToTextFile = (name, data) => {
  fs.writeFile(`${name}.txt`, data, err => {
    if (err) return console.log(err)
    console.log(`${name} written to > ${name}.txt`)
  })
}

/*
 * PRODUCTS
 */

let names = [
  'Ableton',
  'AC Noises',
  'Aclam Guitars',
  'Adam',
  'Adam Black',
  'AER',
  'Akai',
  'AKG',
  'Alesis',
  'Allen & Heath',
  'Almansa',
  'Alto',
  'Alvarez',
  'Ampeg',
  'Apogee',
  'Art',
  'Art & Lutherie',
  'Arturia',
  'Ashdown',
  'Aston',
  'Atkin',
  'Auden',
  'Audient',
  'Audio Technica',
  'Austrian Audio',
  'B&G',
  'Balaguer',
  'BandLab',
  'Bare Knuckle',
  'Barnes & Mullins',
  'BC Rich',
  'Behringer',
  'Beyer',
  'Bigsby',
  'Blackstar',
  'Blade',
  'Bogner',
  'Bose',
  'BOSS',
  'Boston',
  'Breedlove',
  'Brian May',
  'Brunswick',
  'Carlsbro',
  'Casio',
  'Catalinbread',
  'Chapman',
  'Charvel',
  'Chauvet DJ',
  'Chord',
  'Cioks',
  'CNB',
  'Cole Clark',
  'Collings',
  'Cooperstand',
  'Cordoba',
  'Cornell',
  'Cornerstone',
  'Cort',
  'Curt Mangan',
  'Daredevil',
  'Darkglass',
  'Deering',
  'Diago',
  'Digitech',
  'DiMarzio',
  'Dingwall',
  'Dod',
  'DSL',
  'Dunlop',
  'DV Mark',
  'EastCoast',
  'Eastman',
  'Ebow',
  'Electro Harmonix',
  'Electro Voice',
  'Elixir',
  'EMG',
  'Empress Effects',
  'Encore',
  'Epiphone',
  'Ernie Ball',
  'ESP',
  'Eventide',
  'EVH',
  'Faith',
  'Fender',
  'Finlayson',
  'Fishman',
  'Focal',
  'Focusrite',
  'Freshman',
  'Friedman',
  'Fryette',
  'Fulltone',
  'G&L',
  'G7TH',
  'Gallien Krueger',
  'Gator',
  'Gaucho',
  'Genelec',
  'GHS',
  'Gibson',
  'Godin',
  'Grafton',
  'Gravity',
  'Gretsch',
  'Groove Tube',
  'Grover',
  'Gruv Gear',
  'Guild',
  'Hagstrom',
  'HeadRush',
  'Hercules',
  'Hiscox',
  'Hiwatt',
  'Hohner',
  'Hughes & Kettner',
  'Ibanez',
  'Icon',
  'IK Multimedia',
  'Iso Acoustics',
  'ISP',
  'J.Rockett Audio',
  'Jackson',
  'Jackson Audio',
  'Jam Pedals',
  'JHS Pedals',
  'Jose ferrer',
  'Jose Ramirez',
  'Kali Audio',
  'Kam',
  'Kauer Guitars',
  'Keeley',
  'Kemper Digital',
  'Kinsman',
  'Klark Teknik',
  'Klotz',
  'Korg',
  'Kramer',
  'KrK',
  'Lakland',
  'Landlord FX',
  'Laney',
  'Larrivee',
  'LD Systems',
  'Leathergraft',
  'Line 6',
  'Lowden',
  'LR Baggs',
  'LSL Instruments',
  'Mackie',
  'Mad Professor',
  'Mahalo',
  'Manson',
  'Maono',
  'Mapex',
  'Marantz',
  'Mark Bass',
  'Marshall',
  'Martin',
  'Maton',
  'Matthews Effects',
  'M-Audio',
  'Maxon',
  'Mayones',
  'Meris',
  'Mesa Boogie',
  'Mono',
  'Mooer',
  'Moog',
  'Morley',
  'Mother Mary',
  'Music Man',
  'MXR',
  'Natal',
  'National',
  'Native Instruments',
  'Nektar',
  'Neumann',
  'Neural DSP',
  'Nexi Industries',
  'Nik Huber',
  'Nobels',
  'Nord',
  'Novation',
  'Numark',
  'NUX',
  'On Stage',
  'Orange',
  'Ormsby',
  'Ovation',
  'Ozark',
  'Palmer',
  'Paoletti',
  'Peavey',
  'Pedaltrain',
  'Pensa Guitars',
  'Percussion Plus',
  'Peterson',
  'Pigtronix',
  'Pioneer',
  'Planet Waves',
  'PM Components',
  'Polyend',
  'Positive Grid',
  'Presonus',
  'Pro Co',
  'Pro Guard',
  'Pro mark',
  'Providence',
  'PRS',
  'QSC',
  'Qwik Tune',
  'Radial',
  'Randall',
  'RCF',
  'Recording King',
  'Reverend',
  'Revv',
  'Rickenbacker',
  'RMC',
  'RME',
  'Rode',
  'Roland',
  'Rotosound',
  'Sadowsky',
  'Sandberg',
  'Santa Cruz',
  'Schaller',
  'Schecter',
  'Schertler',
  'Seagull',
  'Sennheiser',
  'Seymour Duncan',
  'Shubb',
  'Shure',
  'Sigma',
  'Solar Guitars',
  'Soldano',
  'Sontronics',
  'Soundcraft',
  'Source Audio',
  'Spector',
  'Spire',
  'Squier',
  'SSL',
  'Stagg',
  'Steinberger',
  'Strandberg',
  'Strymon',
  'Studiomaster',
  'Suhr',
  'Supro',
  'Synergy Amps',
  'Takamine',
  'Tama',
  'Tascam',
  'Taylor',
  'TC Electronic',
  'Tech 21',
  'TGI',
  'The Loar',
  'Tone King',
  'TOURTECH',
  'Trace Elliot',
  'T-Rex',
  'Truetone',
  'Twisted Electrons',
  'Two Notes',
  'Tyler',
  'Universal Audio',
  'Valencia',
  'Vertex',
  'Vic Firth',
  'Victory Amps',
  'Voodoo Lab',
  'Vox',
  'Waldorf',
  'Walrus Audio',
  'Wampler',
  'Warm Audio',
  'Waterloo',
  'Way Huge',
  'Westone',
  'Xotic',
  'XVive',
  'Yamaha',
  'Zither',
  'Zoom',
  'ZVEX',
  'Baby Taylor',
  'Taylor 214ce',
  'Taylor GS Mini',
  'Yamaha APX',
  'Yamaha FG',
  'Ibanez BTB',
  'Ibanez SR',
  'Serenity',
  'Earl Skuggs'
]

const productDescriptions = [
  'Open your door to the world of guitar picks with this sleek model. This all-purpose pick is built to last, and packed with features such as the powerful notch groove, reversible design, and convenient wide body for maximum grip. Welcome to guitar heaven!',
  'The right guitar pick can make you sound like Pearl Jam any day of the week! This silver plated drop guitar pick with a pearl setting brings a hint of luxury to your gig and draws attention with every flick of your wrist.',
  'Sometimes the glimmer of a brand-new guitar pick is all we need to rouse our musical spirits. Available in an array of festive colors, this hand-carved pick will leave your fingers free to do their magic! It really is the most wonderful time of the year.',
  'Once in a generation, a guitar pick comes along that rewrites the playbook. We always looked forward to the day when we could be in charge of shredding like Megadeath. With adulthood upon us, now is our time -- and this is our pick.',
  'Rock out in eye-popping style with these killer picks! Each pick is made of abalone and unicorn dreams: their comfortable, wide-body design is as perfect for beginners as it is well-suited to Lenny Kravitz.'
]

const imageUrls = [
  'https://imgur.com/oM7SfZ1.jpg',
  'https://imgur.com/s3JsbqO.jpg',
  'https://imgur.com/DgLPzVK.jpg',
  'https://imgur.com/kkawlXP.jpg',
  'https://imgur.com/uNBav71.jpg',
  'https://imgur.com/gic3yha.jpg',
  'https://imgur.com/tqvkjw2.jpg',
  'https://imgur.com/8UvbRDY.jpg',
  'https://imgur.com/Sf9JkaJ.jpg',
  'https://imgur.com/Gmgt339.jpg',
  'https://imgur.com/rGfc0Wg.jpg',
  'https://imgur.com/LqghLJX.jpg',
  'https://imgur.com/bPGHzu9.jpg',
  'https://imgur.com/e4Vfolf.jpg',
  'https://imgur.com/gNoLmR2.jpg',
  'https://imgur.com/GGZp5CJ.jpg',
  'https://imgur.com/BLp0Zgo.jpg',
  'https://imgur.com/A6UnaU8.jpg',
  'https://imgur.com/ONhLuG3.jpg',
  'https://imgur.com/wRO9ltp.jpg',
  'https://imgur.com/wYzfC0B.jpg',
  'https://imgur.com/w1ouaLF.jpg',
  'https://imgur.com/nqWkef1.jpg',
  'https://imgur.com/3ubpGOb.jpg',
  'https://imgur.com/7oPVYYx.jpg',
  'https://imgur.com/YwNacTJ.jpg',
  'https://imgur.com/2wB7xFG.jpg',
  'https://imgur.com/Orum7WS.jpg',
  'https://imgur.com/xwpgg96.jpg',
  'https://imgur.com/tvGZcYE.jpg',
  'https://imgur.com/kKw9wNI.jpg',
  'https://imgur.com/fwRQ6pf.jpg',
  'https://imgur.com/PWdZb8N.jpg',
  'https://imgur.com/CgBlsWu.jpg',
  'https://imgur.com/saknv02.jpg',
  'https://imgur.com/Mk2uMRz.jpg',
  'https://imgur.com/YVYFYS0.jpg',
  'https://imgur.com/RRpxBj0.jpg',
  'https://imgur.com/Gsg0Pdg.jpg',
  'https://imgur.com/UaZGLVB.jpg',
  'https://imgur.com/KgA3mdT.jpg',
  'https://imgur.com/lYLWeAy.jpg',
  'https://imgur.com/Ilt12Oz.jpg',
  'https://imgur.com/Jeu5E5C.jpg',
  'https://imgur.com/bKoDVCF.jpg',
  'https://imgur.com/PahLGCf.jpg',
  'https://imgur.com/nKGXlZa.jpg',
  'https://imgur.com/ZdNm71Z.jpg',
  'https://imgur.com/oCkgSNq.jpg',
  'https://imgur.com/FtRqucv.jpg',
  'https://imgur.com/jQ2TEBK.jpg',
  'https://imgur.com/YSLcOZu.jpg',
  'https://imgur.com/rQuLLk7.jpg',
  'https://imgur.com/ONCwxjx.jpg',
  'https://imgur.com/8E5gM3f.jpg',
  'https://imgur.com/mf4OrAO.jpg',
  'https://imgur.com/C5Kkyar.jpg',
  'https://imgur.com/JNgbl3N.jpg',
  'https://imgur.com/jaPPlji.jpg',
  'https://imgur.com/5S0CFKf.jpg',
  'https://imgur.com/ojpzr6w.jpg',
  'https://imgur.com/VvXGwGp.jpg',
  'https://imgur.com/JnPRCAu.jpg',
  'https://imgur.com/hW11rl4.jpg',
  'https://imgur.com/jCt8UnX.jpg',
  'https://imgur.com/N4mPlou.jpg',
  'https://imgur.com/9lFzUfp.jpg',
  'https://imgur.com/ynf4lco.jpg',
  'https://imgur.com/9UrOgtF.jpg',
  'https://imgur.com/vjeg5wk.jpg',
  'https://imgur.com/UMYvQMz.jpg',
  'https://imgur.com/za0Bkwn.jpg',
  'https://imgur.com/YIOfq6L.jpg',
  'https://imgur.com/X5QPpM7.jpg',
  'https://imgur.com/dNZiCKP.jpg',
  'https://imgur.com/4u2iHmV.jpg',
  'https://imgur.com/4QAlMw6.jpg',
  'https://imgur.com/kOktUh3.jpg',
  'https://imgur.com/iQSf10J.jpg',
  'https://imgur.com/7bX0E6M.jpg',
  'https://imgur.com/4ym6gyL.jpg',
  'https://imgur.com/fD6pMbM.jpg',
  'https://imgur.com/64WVwlI.jpg',
  'https://imgur.com/EaFTv60.jpg',
  'https://imgur.com/DqwrIl6.jpg',
  'https://imgur.com/VKvRrbK.jpg',
  'https://imgur.com/VMrIo0A.jpg',
  'https://imgur.com/HnZHMuz.jpg',
  'https://imgur.com/LjZAbom.jpg',
  'https://imgur.com/x0JqHN1.jpg',
  'https://imgur.com/aKXT7Nw.jpg',
  'https://imgur.com/SpR28Sb.jpg',
  'https://imgur.com/Ni4WngP.jpg',
  'https://imgur.com/hPmi6fu.jpg',
  'https://imgur.com/wEfstmA.jpg',
  'https://imgur.com/caK28JN.jpg',
  'https://imgur.com/TUBGxp6.jpg',
  'https://imgur.com/4ZoA33u.jpg',
  'https://imgur.com/YKmazzg.jpg',
  'https://imgur.com/RKlyvWx.jpg',
  'https://imgur.com/yanvcKY.jpg',
  'https://imgur.com/7jMchUR.jpg',
  'https://imgur.com/LHt3zGe.jpg',
  'https://imgur.com/Cv0e5pT.jpg',
  'https://imgur.com/UCgcmLZ.jpg',
  'https://imgur.com/MNKxpFt.jpg',
  'https://imgur.com/GFhfum4.jpg',
  'https://imgur.com/4JSZTT9.jpg',
  'https://imgur.com/54edJLq.jpg',
  'https://imgur.com/7z8BEPb.jpg',
  'https://imgur.com/m6iVWhG.jpg',
  'https://imgur.com/qZKNSob.jpg',
  'https://imgur.com/8x9YMDM.jpg',
  'https://imgur.com/2UQzJxw.jpg',
  'https://imgur.com/kaTUtgR.jpg',
  'https://imgur.com/dKE53QS.jpg',
  'https://imgur.com/YTsOqdQ.jpg',
  'https://imgur.com/iX9Jj7A.jpg',
  'https://imgur.com/IvXxmXv.jpg',
  'https://imgur.com/6BJz5c3.jpg',
  'https://imgur.com/v3WfPoz.jpg',
  'https://imgur.com/wyLLDNm.jpg',
  'https://imgur.com/kdqwWhF.jpg',
  'https://imgur.com/DOHef1x.jpg',
  'https://imgur.com/mtetGaj.jpg',
  'https://imgur.com/IOBbrpY.jpg',
  'https://imgur.com/78xLOIf.jpg',
  'https://imgur.com/Os6IVz6.jpg',
  'https://imgur.com/xHryn8p.jpg',
  'https://imgur.com/B6enGlB.jpg',
  'https://imgur.com/KSYbKLx.jpg',
  'https://imgur.com/6o1C9ow.jpg',
  'https://imgur.com/GHs2YJx.jpg',
  'https://imgur.com/ZnVM8ed.jpg',
  'https://imgur.com/TNOIneh.jpg',
  'https://imgur.com/3utV8ES.jpg',
  'https://imgur.com/bcm3xNY.jpg',
  'https://imgur.com/SnhKiPf.jpg',
  'https://imgur.com/rJbq6Ql.jpg',
  'https://imgur.com/SmKBcMY.jpg',
  'https://imgur.com/yG89Vwp.jpg',
  'https://imgur.com/bVzC2T7.jpg',
  'https://imgur.com/T30XzvY.jpg',
  'https://imgur.com/auME7u8.jpg',
  'https://imgur.com/GnM4Yqn.jpg',
  'https://imgur.com/iDjnetY.jpg',
  'https://imgur.com/uPSrMYz.jpg',
  'https://imgur.com/88BHiqL.jpg',
  'https://imgur.com/crhRWzs.jpg',
  'https://imgur.com/fsQMkZf.jpg',
  'https://imgur.com/5W2Ez4o.jpg',
  'https://imgur.com/guu0Hxi.jpg'
]

const getDescription = () =>
  productDescriptions[Math.floor(Math.random() * productDescriptions.length)]

const getImageUrl = () =>
  imageUrls[Math.floor(Math.random() * imageUrls.length)]

const getInventory = () => Math.ceil(Math.random() * 100)

const getPrice = () => {
  const min = Math.ceil(1)
  const max = Math.floor(1000)
  return Math.floor(Math.random() * (max - min + 1) + min)
}

const getAllProducts = () => {
  let res = []
  while (names.length) {
    res.push({
      name: names.shift(),
      description: getDescription(),
      imageUrl: getImageUrl(),
      inventory: getInventory(),
      price: getPrice()
    })
  }
  return res
}

const allProducts = getAllProducts()

writeToTextFile('allProductsSeed', JSON.stringify(allProducts))

/*
 * ADDRESSES
 */

const getNumber = () => Math.ceil(Math.random() * 9999)

const houseOrApt = randNum => (randNum > 0.5 ? 'house' : 'apartment')

let streetNames = [
  'Park Avenue',
  'Glenwood Drive',
  'Parker Street',
  'Heritage Drive',
  '4th Street North',
  'Jackson Street',
  'Country Lane',
  'Cottage Street',
  'Forest Avenue',
  'Prospect Street',
  'Colonial Drive',
  'Beech Street',
  'Cherry Lane',
  'Victoria Court',
  'Overlook Circle',
  '14th Street',
  'Howard Street',
  'Willow Drive',
  'Route 202',
  'Oak Street',
  'Railroad Street',
  'Crescent Street',
  'Grove Street',
  'Hamilton Road',
  '8th Street West',
  '6th Street',
  'Broadway',
  'Surrey Lane',
  '3rd Street North',
  '2nd Avenue',
  '5th Street North',
  'Evergreen Lane',
  'Lantern Lane',
  'Madison Street',
  'Lake Avenue',
  'Oxford Court',
  'Creekside Drive',
  'Myrtle Avenue',
  'Marshall Street',
  'Devonshire Drive',
  'Grove Avenue',
  'Lawrence Street',
  'Euclid Avenue',
  'Harrison Street',
  'Franklin Court',
  'Pleasant Street',
  'Route 44',
  'Briarwood Court',
  '6th Street West',
  '7th Street',
  'Elm Avenue',
  '2nd Street West',
  'State Street',
  'Orchard Street',
  'Hawthorne Lane',
  'Oak Lane',
  'Church Road',
  'Route 11',
  '3rd Street West',
  'Lexington Drive',
  'Ridge Road',
  'Lake Street',
  '12th Street East',
  'Chapel Street',
  'Laurel Street',
  'Fairview Road',
  'Locust Street',
  'Cobblestone Court',
  'Division Street',
  'Summit Street',
  'Amherst Street',
  'Fairway Drive',
  'Front Street',
  'Walnut Street',
  'Warren Avenue',
  'Pin Oak Drive',
  'Cambridge Road',
  'Edgewood Drive',
  'Madison Avenue',
  'Mill Road',
  'Elm Street',
  'Madison Court',
  'Queen Street',
  'Eagle Street',
  'Mill Street',
  'Rosewood Drive',
  'Route 9',
  'Valley Road',
  'Main Street North',
  'Front Street North',
  'Laurel Lane',
  'Country Club Drive',
  'Jefferson Court',
  'Maiden Lane',
  'Green Street',
  'Homestead Drive',
  '3rd Street East',
  'Fairview Avenue',
  'Hickory Lane',
  'East Street'
]

let cityNames = [
  'Milwaukee',
  'Omaha',
  'Cincinnati',
  'Seattle',
  'Colorado Springs',
  'Oakland',
  'Newark',
  'Santa Ana',
  'Atlanta',
  'Reno',
  'Fresno',
  'Charlotte',
  'Portland',
  'Boise',
  'Buffalo',
  'Austin',
  'Nashville-Davidson',
  'Chandler',
  'Boston',
  'Madison',
  'Hialeah',
  'Stockton',
  'Fort Worth',
  'Anchorage',
  'Pittsburgh',
  'Miami',
  'Sacramento',
  'Indianapolis',
  'Bakersfield',
  'Los Angeles',
  'Greensboro',
  'Durham',
  'North Hempstead',
  'Columbus',
  'Riverside',
  'Wichita',
  'Minneapolis',
  'Garland',
  'Kansas City',
  'Las Vegas',
  'San Bernardino',
  'Laredo',
  'Jacksonville',
  'Lubbock',
  'Memphis',
  'Tulsa',
  'Chicago',
  'Arlington',
  'Chula Vista',
  'Mesa',
  'St. Louis',
  'Albuquerque',
  'St. Petersburg',
  'Oklahoma City',
  'Philadelphia',
  'Arlington',
  'Scottsdale',
  'Houston',
  'Long Beach',
  'Aurora',
  'Virginia Beach',
  'Rochester',
  'Corpus Christi',
  'Akron',
  'New York',
  'San Diego',
  'Jersey City',
  'Plano',
  'New Orleans',
  'Denver',
  'Raleigh',
  'San Jose',
  'Birmingham',
  'Phoenix',
  'Lexington-Fayette',
  'Modesto',
  'Baton Rouge',
  'Baltimore',
  'San Antonio',
  'Cleveland',
  'St. Paul',
  'Detroit',
  'Glendale',
  'Norfolk',
  'Tucson',
  'Huntington',
  'Chesapeake',
  'Fort Wayne',
  'Lincoln',
  'Toledo',
  'Orlando',
  'Anaheim',
  'El Paso',
  'Henderson',
  'Honolulu',
  'San Francisco',
  'Tampa',
  'Washington',
  'Montgomery',
  'Dallas'
]

const states = [
  'AK',
  'AL',
  'AR',
  'AS',
  'AZ',
  'CA',
  'CO',
  'CT',
  'DC',
  'DE',
  'FL',
  'GA',
  'GU',
  'HI',
  'IA',
  'ID',
  'IL',
  'IN',
  'KS',
  'KY',
  'LA',
  'MA',
  'MD',
  'ME',
  'MI',
  'MN',
  'MO',
  'MS',
  'MT',
  'NC',
  'ND',
  'NE',
  'NH',
  'NJ',
  'NM',
  'NV',
  'NY',
  'OH',
  'OK',
  'OR',
  'PA',
  'PR',
  'RI',
  'SC',
  'SD',
  'TN',
  'TX',
  'UT',
  'VA',
  'VI',
  'VT',
  'WA',
  'WI',
  'WV',
  'WY'
]

const zipCodes = [
  '21206',
  '33771',
  '27834',
  '32746',
  '60446',
  '20886',
  '37803',
  '12401',
  '97402',
  '60409',
  '43015',
  '44122',
  '06033',
  '21208',
  '01915',
  '60462',
  '12020',
  '11050',
  '45342',
  '08648',
  '34997',
  '98037',
  '35758',
  '33060',
  '23228',
  '93306',
  '30281',
  '34203',
  '21236',
  '07652',
  '11566',
  '48192',
  '43119',
  '19111',
  '24540',
  '33952',
  '46375',
  '02135',
  '02895',
  '85718',
  '06095',
  '48185',
  '48504',
  '34116',
  '53511',
  '91387',
  '23185',
  '03051',
  '94806',
  '34231',
  '17050',
  '95050',
  '16001',
  '30701',
  '02062',
  '01420',
  '30083',
  '17522',
  '19464',
  '55060',
  '30047',
  '60169',
  '33030',
  '10801',
  '29349',
  '11361',
  '44133',
  '30030',
  '81001',
  '18042',
  '48103',
  '42240',
  '46901',
  '11590',
  '44663',
  '21042',
  '50310',
  '98607',
  '06082',
  '48045',
  '22079',
  '11757',
  '53546',
  '21228',
  '39120',
  '14304',
  '08723',
  '19460',
  '48035',
  '71730',
  '11572',
  '35640',
  '60031',
  '60187',
  '21771',
  '06516',
  '60142',
  '38053',
  '75088',
  '01960'
]

const getAllAddresses = () => {
  let res = []
  while (streetNames.length) {
    res.push({
      number: getNumber(),
      houseOrApt: houseOrApt(Math.random()),
      streetName: streetNames.shift(),
      city: cityNames.shift(),
      state: states[Math.floor(Math.random() * states.length)],
      zip: zipCodes[Math.floor(Math.random() * zipCodes.length)]
    })
  }
  return res
}

const allAddresses = getAllAddresses()

// writeToTextFile('allAddressesSeed', JSON.stringify(allAddresses))

/* PRODUCT-ORDERS THROUGH TABLE ENTRIES */

const getPricePaid = () => {
  // +500 ensures every order is at least $5.00
  return Math.ceil(Math.random() * 500 + 100)
}

const getQuantity = () => {
  return Math.ceil(Math.random() * 100)
}

const getOrderId = () => {
  return Math.ceil(Math.random() * 20)
}

const buildProductOrder = productId => {
  return {
    pricePaid: getPricePaid(),
    quantity: getQuantity(),
    orderId: getOrderId(),
    productId
  }
}

// const allProductOrders = new Array(200)
//   .fill(null)
//   .map((empty, idx) => buildProductOrder(++idx))

// writeToTextFile('allProductOrdersSeed', JSON.stringify(allProductOrders))

/* USERADDRESS THROUGH TABLE */

// one helper that generates ids
const ids = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

const getId = () => {
  return ids[Math.floor(Math.random() * ids.length)]
}

const buildUserAddress = () => {
  return {
    userId: getId(),
    addressId: getId()
  }
}

// console.log(new Array(10).fill(null).map(() => buildUserAddress()))
